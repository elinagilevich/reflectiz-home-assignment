{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/material.module.ts","./src/app/shared/components/charts/color-map-chart/color-map-chart.component.ts","./src/app/shared/components/charts/color-map-chart/color-map-chart.component.html","./src/app/shared/components/charts/grouped-vertical-bar-chart/grouped-vertical-bar-chart.component.ts","./src/app/shared/components/charts/grouped-vertical-bar-chart/grouped-vertical-bar-chart.component.html","./src/app/shared/components/charts/horizontal-bar-chart/horizontal-bar-chart.component.ts","./src/app/shared/components/charts/horizontal-bar-chart/horizontal-bar-chart.component.html","./src/app/shared/components/charts/no-data-for-display/no-data-for-display.component.ts","./src/app/shared/components/charts/no-data-for-display/no-data-for-display.component.html","./src/app/shared/components/charts/pie-chart/pie-chart.component.ts","./src/app/shared/components/charts/pie-chart/pie-chart.component.html","./src/app/shared/components/chips/chips.component.ts","./src/app/shared/components/chips/chips.component.html","./src/app/shared/components/color-field/color-field.component.ts","./src/app/shared/components/color-field/color-field.component.html","./src/app/shared/components/navigation/navigation.component.ts","./src/app/shared/components/navigation/navigation.component.html","./src/app/shared/constants/regexp.consts.ts","./src/app/shared/models/user-info.model.ts","./src/app/shared/services/data-info.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/validators/date-validator.directive.ts","./src/app/shared/validators/no-special-characters.directive.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {LandingComponent} from './landing/landing.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: LandingComponent\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'reflectiz-home-assignment';\n}\n","<router-outlet></router-outlet>\r\n","import {AppRoutingModule} from './app-routing.module';\r\nimport {SharedModule} from './shared/shared.module';\r\nimport {AppComponent} from './app.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {LandingComponent} from './landing/landing.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    SharedModule\r\n  ],\r\n  exports: [],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\r\nimport {GenderDisplayNames, MotorTypeDisplayNames, UserInfo} from '../shared/models/user-info.model';\r\nimport {Regexp} from '../shared/constants/regexp.consts';\r\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\r\nimport {Color} from '@angular-material-components/color-picker';\r\nimport {UntypedFormBuilder, UntypedFormGroup, NgForm, Validators} from '@angular/forms';\r\nimport {ChipsComponent} from '../shared/components/chips/chips.component';\r\nimport {ColorFieldComponent} from '../shared/components/color-field/color-field.component';\r\nimport {DataInfoService} from '../shared/services/data-info.service';\r\n\r\n\r\nconst defaultGridCols = 2;\r\nconst mobileGridCols = 3;\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss']\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  @ViewChild('form') form: NgForm;\r\n  @ViewChild('chips') chips: ChipsComponent;\r\n  @ViewChild('color') color: ColorFieldComponent;\r\n\r\n  layoutCols = defaultGridCols;\r\n  defaultGridCols = defaultGridCols;\r\n\r\n  userInfo: UserInfo = new UserInfo();\r\n  genderOptions = GenderDisplayNames;\r\n  motorOptions = MotorTypeDisplayNames;\r\n\r\n  regexEmail = Regexp.EMAIL;\r\n  appearance: MatFormFieldAppearance = 'standard';\r\n\r\n  firstFormGroup: UntypedFormGroup;\r\n  secondFormGroup: UntypedFormGroup;\r\n  isFormSubmitted = false;\r\n  isFormActivated = false;\r\n  isInfoSent = false;\r\n  maxlength = 50;\r\n  specialCharsError = 'Following characters are forbidden: !&~#$^*()+=\\\"[]{}|?`/\\\\:<>%;\\'';\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver,\r\n              private formBuilder: UntypedFormBuilder,\r\n              private dataInfoService: DataInfoService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataInfoService.setVisitorsCounter();\r\n    this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small])\r\n      .subscribe(\r\n        ({matches}) => {\r\n          this.layoutCols = matches ? mobileGridCols : defaultGridCols;\r\n        }\r\n      );\r\n\r\n    this.firstFormGroup = this.formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this.formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n\r\n\r\n  sendInfo(): void {\r\n    this.isFormSubmitted = true;\r\n    this.chips.chipInput.control.markAsTouched();\r\n    if (this.isFormValid) {\r\n      this.dataInfoService.setUserInfo(this.userInfo);\r\n      this.isInfoSent = true;\r\n    }\r\n  }\r\n\r\n  onColorChange(color: Color): void {\r\n    this.userInfo.favouriteColor = color;\r\n  }\r\n\r\n  get isFormValid(): boolean {\r\n    return this.form?.form?.valid && this.chips?.chipInput?.control?.valid && this.color?.colorInput?.control?.valid;\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n  <mat-toolbar class=\"header mat-elevation-z5\">\r\n\r\n    <h2 class=\"title\">Reflectiz <span class=\"accent\">Cars</span></h2>\r\n    <a class=\"dashboard-button\" mat-stroked-button routerLink=\"dashboard\">Dashboard</a>\r\n  </mat-toolbar>\r\n\r\n  <form #form=\"ngForm\" (ngSubmit)=\"sendInfo()\">\r\n    <mat-grid-list cols=\"3\" rowHeight=\"fit\">\r\n      <mat-grid-tile [colspan]=\"layoutCols\" class=\"form-wrapper\">\r\n        <mat-card class=\"form-card mat-elevation-z0\">\r\n          <div class=\"inner-section\">\r\n            <div *ngIf=\"!isFormActivated\">\r\n              <h3 class=\"form-title\">Car of your dream is right there!</h3>\r\n              <p class=\"sub-line\">We really know how to match a perfect car to the perfect owner. Take our one-minute questionnaire and get best offer from the dealer.</p>\r\n\r\n              <div class=\"button-wrapper\">\r\n                <button class=\"form-btn invite-btn\" (click)=\"isFormActivated = true\" mat-raised-button color=\"accent\">I'm ready!</button>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"isFormActivated && !isInfoSent\" class=\"form-controls-wrapper\">\r\n\r\n              <p class=\"first-line\">Please fill in the form</p>\r\n\r\n              <div class=\"control-field full\">\r\n                <mat-form-field [appearance]=\"appearance\" data-test-id=\"fullName\">\r\n                  <mat-label>Full name</mat-label>\r\n                  <input [(ngModel)]=\"userInfo.fullName\" name=\"fullName\" matInput placeholder=\"Enter full name\"\r\n                         aria-label=\"custom domain\" required [maxLength]=\"maxlength\" #fullName=\"ngModel\" appNoSpecialCharacters>\r\n                  <mat-error *ngIf=\"fullName?.errors?.specialCharsForbidden\">{{specialCharsError}}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"control-field\">\r\n                <mat-form-field [appearance]=\"appearance\" data-test-id=\"gender\">\r\n                  <mat-label>Gender</mat-label>\r\n                  <mat-select placeholder=\"Select gender\"\r\n                              [(ngModel)]=\"userInfo.gender\"\r\n                              name=\"gender\" required>\r\n                    <mat-option *ngFor=\"let option of genderOptions | keyvalue\" value=\"{{option.key}}\">\r\n                      {{option.value}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"control-field\">\r\n\r\n                <mat-form-field [appearance]=\"appearance\" data-test-id=\"birthDate\" class=\"birth-date-field\">\r\n                  <mat-label>Birth date</mat-label>\r\n                  <input #birthDate=\"ngModel\" [(ngModel)]=\"userInfo.birthDate\" placeholder=\"Choose a date\" name=\"birthDate\" aria-label=\"birth date\" matInput\r\n                         [matDatepicker]=\"picker\" required appDateValidator>\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker></mat-datepicker>\r\n                  <mat-error *ngIf=\"birthDate?.errors?.dateInFuture\">Date is in the future</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"control-field full\">\r\n                <mat-form-field [appearance]=\"appearance\" data-test-id=\"email\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input [(ngModel)]=\"userInfo.email\" name=\"email\" matInput placeholder=\"Enter email\"\r\n                         aria-label=\"email\" required #email=\"ngModel\" [pattern]=\"regexEmail\" [maxLength]=\"maxlength\" appNoSpecialCharacters>\r\n                  <mat-error *ngIf=\"email?.errors?.specialCharsForbidden\">{{specialCharsError}}</mat-error>\r\n                  <mat-error *ngIf=\"email.errors?.pattern\">Enter a valid email address</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"control-field full\">\r\n                <mat-form-field [appearance]=\"appearance\" data-test-id=\"address\">\r\n                  <mat-label>Address</mat-label>\r\n                  <input [(ngModel)]=\"userInfo.location.address\" name=\"address\" matInput placeholder=\"Your address\"\r\n                         aria-label=\"address\" required [maxLength]=\"100\" appNoSpecialCharacters #address=\"ngModel\">\r\n                  <mat-error *ngIf=\"address?.errors?.specialCharsForbidden\">{{specialCharsError}}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"control-field\">\r\n                <mat-form-field [appearance]=\"appearance\" data-test-id=\"country\">\r\n                  <mat-label>Country</mat-label>\r\n                  <input [(ngModel)]=\"userInfo.location.country\" name=\"country\" matInput placeholder=\"Your country\"\r\n                         aria-label=\"country\" required [maxLength]=\"maxlength\" appNoSpecialCharacters #country=\"ngModel\">\r\n                  <mat-error *ngIf=\"country?.errors?.specialCharsForbidden\">{{specialCharsError}}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"control-field\">\r\n                <mat-form-field [appearance]=\"appearance\" data-test-id=\"city\">\r\n                  <mat-label>City</mat-label>\r\n                  <input [(ngModel)]=\"userInfo.location.city\" name=\"city\" matInput placeholder=\"Your city\"\r\n                         aria-label=\"city\" required [maxLength]=\"maxlength\" appNoSpecialCharacters #city=\"ngModel\">\r\n                  <mat-error *ngIf=\"city?.errors?.specialCharsForbidden\">{{specialCharsError}}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"control-field full\">\r\n                <app-chips #chips [elements]=\"userInfo.hobbies\" [placeholder]=\"'Add hobby...'\" [label]=\"'Your hobbies'\" [maxElements]=\"5\"></app-chips>\r\n              </div>\r\n\r\n              <div class=\"control-field\">\r\n                <app-color-field #color [color]=\"userInfo.favouriteColor\" (colorChanged)=\"onColorChange($event)\"></app-color-field>\r\n              </div>\r\n\r\n              <div class=\"control-field\">\r\n                <mat-form-field [appearance]=\"appearance\" data-test-id=\"seats\">\r\n                  <mat-label>Amount of seats</mat-label>\r\n                  <input type=\"number\" min=\"0\" [max]=\"maxlength\" [(ngModel)]=\"userInfo.seatsAmount\" name=\"seats\" matInput placeholder=\"Required amount of seats\"\r\n                         aria-label=\"seats\" required>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"control-field\">\r\n                <mat-form-field [appearance]=\"appearance\" data-test-id=\"motor\">\r\n                  <mat-label>Motor Type</mat-label>\r\n                  <mat-select placeholder=\"Select motor type\"\r\n                              [(ngModel)]=\"userInfo.motorType\"\r\n                              name=\"motorType\" required>\r\n                    <mat-option *ngFor=\"let option of motorOptions | keyvalue\" value=\"{{option.key}}\">\r\n                      {{option.value}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <mat-error class=\"submit-error\" *ngIf=\"!isFormValid && isFormSubmitted\">Please ensure that provided data is valid and all required inputs are filled in.</mat-error>\r\n              <div class=\"button-wrapper\">\r\n                <button class=\"form-btn\" mat-raised-button color=\"primary\">Send</button>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div *ngIf=\"isInfoSent\">\r\n              <h3 class=\"form-title final\">Dear {{userInfo.fullName}}, your perfect match is on its way!</h3>\r\n              <p class=\"sub-line\">Your request just was sent and a mail with the results will be sent to {{userInfo.email}} in a couple of minutes. We really appreciate your time!</p>\r\n            </div>\r\n          </div>\r\n        </mat-card>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n  </form>\r\n\r\n  <div class=\"footer\">\r\n    <span>Powered by Reflectiz Cars ©2022.</span>\r\n  </div>\r\n</div>\r\n","import {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkAccordionModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule\r\n\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\n\n@Component({\n  selector: 'app-color-map-chart',\n  templateUrl: './color-map-chart.component.html',\n  styleUrls: ['./color-map-chart.component.scss']\n})\nexport class ColorMapChartComponent implements OnInit, OnChanges {\n\n  @Input() data = [];\n  view: any[] = [400, 250];\n\n  // options\n  gradient = false;\n  animations = true;\n  customColors = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.customColors = this.data.map(v => {\n      return {\n        name: v.name,\n        value: v.name\n      };\n    });\n  }\n\n}\n","<ngx-charts-tree-map *ngIf=\"!!data.length; else noDataToDisplay\"\n  [view]=\"view\"\n  [customColors]=\"customColors\"\n  [results]=\"data\"\n  [gradient]=\"gradient\"\n  [animations]=\"animations\">\n</ngx-charts-tree-map>\n<ng-template #noDataToDisplay>\n  <app-no-data-for-display></app-no-data-for-display>\n</ng-template>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Color, LegendPosition, ScaleType} from '@swimlane/ngx-charts';\n\n@Component({\n  selector: 'app-grouped-vertical-bar-chart',\n  templateUrl: './grouped-vertical-bar-chart.component.html',\n  styleUrls: ['./grouped-vertical-bar-chart.component.scss']\n})\nexport class GroupedVerticalBarChartComponent implements OnInit {\n\n  @Input() xAxisLabel = '';\n  @Input() yAxisLabel = '';\n  @Input() legendTitle = '';\n  @Input() data = [];\n\n  view: any[] = [400, 250];\n\n  // options\n  showXAxis = true;\n  showYAxis = true;\n  gradient = true;\n  showLegend = true;\n  showXAxisLabel = false;\n  showYAxisLabel = true;\n  legendPosition: LegendPosition = LegendPosition.Below;\n\n  colorScheme: Color = {\n    domain: ['#673AB7', '#ffd740'],\n    group: ScaleType.Ordinal,\n    selectable: true,\n    name: 'Customer Usage',\n  };\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  isDataEmpty(): boolean {\n    return this.data.every(entry => !entry.series.length);\n  }\n}\n","<ngx-charts-bar-vertical-2d *ngIf=\"!isDataEmpty(); else noDataToDisplay\"\n  [scheme]=\"colorScheme\"\n  [view]=\"view\"\n  [results]=\"data\"\n  [gradient]=\"gradient\"\n  [xAxis]=\"showXAxis\"\n  [yAxis]=\"showYAxis\"\n  [legend]=\"showLegend\"\n  [showXAxisLabel]=\"showXAxisLabel\"\n  [showYAxisLabel]=\"showYAxisLabel\"\n  [xAxisLabel]=\"xAxisLabel\"\n  [yAxisLabel]=\"yAxisLabel\"\n  [legendTitle]=\"legendTitle\"\n  [legendPosition]=\"legendPosition\">\n</ngx-charts-bar-vertical-2d>\n<ng-template #noDataToDisplay>\n  <app-no-data-for-display></app-no-data-for-display>\n</ng-template>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Color, LegendPosition, ScaleType} from '@swimlane/ngx-charts';\n\n@Component({\n  selector: 'app-horizontal-bar-chart',\n  templateUrl: './horizontal-bar-chart.component.html',\n  styleUrls: ['./horizontal-bar-chart.component.scss']\n})\nexport class HorizontalBarChartComponent implements OnInit {\n\n  @Input() xAxisLabel = '';\n  @Input() yAxisLabel = '';\n  @Input() legendTitle = '';\n  @Input() data = [];\n\n  view: any[] = [400, 250];\n\n  // options\n  showXAxis = true;\n  showYAxis = false;\n  gradient = true;\n  showLegend = true;\n  showXAxisLabel = false;\n  showYAxisLabel = false;\n  legendPosition: LegendPosition = LegendPosition.Below;\n\n\n\n  colorScheme: Color = {\n    domain: ['#673AB7', '#ffd740', '#AAAAAA'],\n    group: ScaleType.Ordinal,\n    selectable: true,\n    name: 'Customer Usage',\n  };\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  format(xAxisVal): number {\n    return Math.round(xAxisVal);\n  }\n\n}\n","<ngx-charts-bar-horizontal-stacked *ngIf=\"!!data.length; else noDataToDisplay\"\n  [view]=\"view\"\n  [scheme]=\"colorScheme\"\n  [results]=\"data\"\n  [gradient]=\"gradient\"\n  [xAxis]=\"showXAxis\"\n  [yAxis]=\"showYAxis\"\n  [legend]=\"showLegend\"\n  [legendPosition]=\"legendPosition\"\n  [legendTitle]=\"legendTitle\"\n  [showXAxisLabel]=\"showXAxisLabel\"\n  [showYAxisLabel]=\"showYAxisLabel\"\n  [xAxisTickFormatting]=\"format\"\n  [xAxisLabel]=\"xAxisLabel\"\n  [yAxisLabel]=\"yAxisLabel\"\n>\n  <ng-template #tooltipTemplate let-model=\"model\">\n    <div class=\"tooltip-wrapper\">\n      {{ model.name }} - {{ model.value }} visitors\n    </div>\n  </ng-template>\n</ngx-charts-bar-horizontal-stacked>\n<ng-template #noDataToDisplay>\n  <app-no-data-for-display></app-no-data-for-display>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-data-for-display',\n  templateUrl: './no-data-for-display.component.html',\n  styleUrls: ['./no-data-for-display.component.scss']\n})\nexport class NoDataForDisplayComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"no-data\">\n  Sorry no data to display\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {LegendPosition, Color, ScaleType} from '@swimlane/ngx-charts';\n\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.scss']\n})\nexport class PieChartComponent implements OnInit {\n\n  @Input() legendTitle = '';\n  @Input() data = [];\n\n  view: any[] = [400, 250];\n\n  // options\n  gradient = true;\n  showLegend = true;\n  showLabels = true;\n  isDoughnut = false;\n  legendPosition: LegendPosition = LegendPosition.Below;\n\n  colorScheme: Color = {\n    domain: ['#673AB7', '#ffd740'],\n    group: ScaleType.Ordinal,\n    selectable: true,\n    name: 'Customer Usage',\n  };\n\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  isDataEmpty(): boolean {\n    return this.data.every(entry => !entry.value);\n  }\n}\n","<ngx-charts-pie-chart *ngIf=\"!isDataEmpty(); else noDataToDisplay\"\n  [view]=\"view\"\n  [scheme]=\"colorScheme\"\n  [results]=\"data\"\n  [gradient]=\"gradient\"\n  [legend]=\"showLegend\"\n  [legendPosition]=\"legendPosition\"\n  [labels]=\"showLabels\"\n  [doughnut]=\"isDoughnut\"\n  [legendTitle]=\"legendTitle\"\n  [trimLabels]=\"false\"\n>\n</ngx-charts-pie-chart>\n<ng-template #noDataToDisplay>\n  <app-no-data-for-display></app-no-data-for-display>\n</ng-template>\n","import {AfterViewChecked, ChangeDetectorRef, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\nimport {NgModel} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-chips',\r\n  templateUrl: './chips.component.html',\r\n  styleUrls: ['./chips.component.scss']\r\n})\r\nexport class ChipsComponent implements OnInit, AfterViewChecked {\r\n\r\n  @Input() elements: string[] = [];\r\n  @Input() label: string;\r\n  @Input() placeholder: string;\r\n  @Input() maxElements: number;\r\n  visible = true;\r\n  selectable = false;\r\n  removable = true;\r\n  addOnBlur = true;\r\n\r\n  @ViewChild('chipInput') chipInput: NgModel;\r\n\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n\r\n  constructor(private ref: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  remove(hobby: string): void {\r\n    const index = this.elements.indexOf(hobby);\r\n\r\n    if (index >= 0) {\r\n      this.elements.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    // Add hobby\r\n    if ((value || '').trim()) {\r\n      this.elements.push(value.trim().toLowerCase());\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n\r\n  onBlur(): void {\r\n    if (!this.elements.length) {\r\n      this.chipInput.control.setErrors({required: true});\r\n    } else {\r\n      this.chipInput.control.setErrors(null);\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.onBlur();\r\n    this.ref.detectChanges();\r\n  }\r\n\r\n  isControlInvalid(): boolean {\r\n    return this.chipInput?.control?.invalid && this.chipInput?.control?.touched;\r\n  }\r\n\r\n  isPossibleToAddMore(): boolean {\r\n    return !this.maxElements || this.elements.length < this.maxElements;\r\n  }\r\n\r\n  resolvePlaceholder(): string {\r\n    return this.isPossibleToAddMore() ? this.placeholder : '';\r\n  }\r\n}\r\n","<mat-form-field class=\"chip-list\" [ngClass]=\"{'mat-form-field-invalid': isControlInvalid()}\" [attr.data-test-id]=\"label\">\r\n  <mat-label>{{label}}</mat-label>\r\n  <mat-chip-list #chipList aria-label=\"Fruit selection\" required>\r\n    <mat-chip *ngFor=\"let element of elements\" [selectable]=\"selectable\"\r\n              [removable]=\"removable\" (removed)=\"remove(element)\">\r\n      {{element}}\r\n      <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n    </mat-chip>\r\n    <input [ngModel]=\"elements\" #chipInput=\"ngModel\" [placeholder]=\"resolvePlaceholder()\"\r\n           [matChipInputFor]=\"chipList\"\r\n           [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n           [matChipInputAddOnBlur]=\"addOnBlur\"\r\n           (matChipInputTokenEnd)=\"add($event)\" aria-label=\"chip-list\"\r\n           (blur)=\"onBlur()\" [disabled]=\"!isPossibleToAddMore()\"\r\n            maxlength=\"30\">\r\n  </mat-chip-list>\r\n  <mat-hint *ngIf=\"maxElements\">Possible to enter till {{maxElements}} elements</mat-hint>\r\n</mat-form-field>\r\n","import {Component, Input, OnInit, Output, EventEmitter, ViewChild, AfterViewInit} from '@angular/core';\r\nimport {Color, NgxMatColorToggleComponent} from '@angular-material-components/color-picker';\r\nimport {NgModel} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-color-field',\r\n  templateUrl: './color-field.component.html',\r\n  styleUrls: ['./color-field.component.scss']\r\n})\r\nexport class ColorFieldComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('toggle') toggle: NgxMatColorToggleComponent;\r\n  @ViewChild('colorInput') colorInput: NgModel;\r\n\r\n  @Input() color: Color | string;\r\n\r\n  @Output()\r\n  public colorChanged = new EventEmitter<Color>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  colorChangeEmit(value: Color): void {\r\n    // this.colorChanged.emit([value, paramName]);\r\n    this.colorChanged.emit(value);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.toggle._button._elementRef.nativeElement.firstChild.firstChild.firstChild.nodeValue = 'square';\r\n  }\r\n\r\n}\r\n","<mat-form-field class=\"color-param\" data-test-id=\"color\">\r\n  <mat-label>Favourite color</mat-label>\r\n  <input matInput [ngxMatColorPicker]=\"colorPicker\" [(ngModel)]=\"color\" #colorInput=\"ngModel\" name=\"color\" aria-label=\"color\"\r\n         (colorChange)=\"colorChangeEmit($event.value)\" required>\r\n  <ngx-mat-color-toggle #toggle matSuffix [for]=\"colorPicker\"></ngx-mat-color-toggle>\r\n  <ngx-mat-color-picker #colorPicker [touchUi]=\"false\" color=\"primary\"></ngx-mat-color-picker>\r\n</mat-form-field>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Link} from '../../models/link.model';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.scss']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n\r\n  @Input() items: Link[];\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-nav-list class=\"nav-list\">\r\n  <a *ngFor=\"let link of items\" mat-list-item [routerLink]=\"link.path\" routerLinkActive=\"active-link\">\r\n    <mat-icon *ngIf=\"link.icon\" class=\"material-icons-outlined\" matListIcon>{{link.icon}}</mat-icon>\r\n    <span class=\"item-title\">{{ link.title }}</span>\r\n  </a>\r\n</mat-nav-list>\r\n","export class Regexp {\r\n  public static readonly EMAIL = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  public static readonly EXCEPT_SPECIAL_CHARACTERS = /^[^!&~#$^*()+=[\\]{}|\\\\?:<>'\"/;`%]*$/;\r\n}\r\n","import {Color} from '@angular-material-components/color-picker';\r\n\r\nexport class UserInfo {\r\n  fullName?: string;\r\n  gender?: Gender;\r\n  email?: string;\r\n  birthDate?: string;\r\n  location?: LocationDetails;\r\n  hobbies?: string[];\r\n  favouriteColor?: Color | string;\r\n  seatsAmount?: number;\r\n  motorType?: MotorType;\r\n\r\n  constructor({fullName, gender, email, birthDate, location = new LocationDetails(),\r\n                hobbies = [], favouriteColor, seatsAmount = 0, motorType}:\r\n                { fullName?: string,\r\n                  gender?: Gender,\r\n                  email?: string,\r\n                  birthDate?: string,\r\n                  location?: LocationDetails,\r\n                  hobbies?: string[],\r\n                  favouriteColor?: Color | string,\r\n                  seatsAmount?: number,\r\n                  motorType?: MotorType\r\n                } = {}\r\n  ) {\r\n\r\n    this.fullName = fullName;\r\n    this.gender = gender;\r\n    this.email = email;\r\n    this.birthDate = birthDate;\r\n    this.location = location;\r\n    this.hobbies = hobbies;\r\n    this.favouriteColor = favouriteColor;\r\n    this.seatsAmount = seatsAmount;\r\n    this.motorType = motorType;\r\n\r\n  }\r\n}\r\n\r\nexport enum Gender {\r\n  Male = 'male',\r\n  Female = 'female',\r\n  Other = 'other',\r\n  NotSay = 'unknown'\r\n}\r\n\r\nexport const GenderDisplayNames = {\r\n  [Gender.Male]: 'Male',\r\n  [Gender.Female]: 'Female',\r\n  [Gender.Other]: 'Other',\r\n  [Gender.NotSay]: 'I prefer not to say'\r\n};\r\n\r\nexport const DashboardGenderDisplayNames = {\r\n  [Gender.Male]: 'Male',\r\n  [Gender.Female]: 'Female',\r\n  [Gender.Other]: 'Other',\r\n  [Gender.NotSay]: 'Unknown'\r\n};\r\n\r\nexport class LocationDetails {\r\n  address?: string;\r\n  city?: string;\r\n  country?: string;\r\n\r\n  constructor({address, city, country}: { address?: string, city?: string, country?: string } = {}\r\n  ) {\r\n\r\n    this.address = address;\r\n    this.city = city;\r\n    this.country = country;\r\n  }\r\n}\r\n\r\nexport enum MotorType {\r\n  Electric = 'electric',\r\n  Fuel = 'fuel'\r\n}\r\n\r\nexport const MotorTypeDisplayNames = {\r\n  [MotorType.Electric]: 'Electric',\r\n  [MotorType.Fuel]: 'Fuel'\r\n};\r\n","import {Injectable} from '@angular/core';\r\nimport {UserInfo} from '../models/user-info.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataInfoService {\r\n\r\n  private static prepareData(userInfo: UserInfo): UserInfo {\r\n    return new UserInfo({...userInfo, favouriteColor: `#${typeof userInfo.favouriteColor !== 'string' ? userInfo.favouriteColor.hex : userInfo.favouriteColor}`});\r\n  }\r\n\r\n  getUserInfo(): UserInfo[] {\r\n    const userInfoString = localStorage.getItem('users_info') || '[]';\r\n    return JSON.parse(userInfoString);\r\n  }\r\n\r\n  setUserInfo(userInfo: UserInfo): void {\r\n    const parsedData: UserInfo[] = this.getUserInfo();\r\n    parsedData.push(DataInfoService.prepareData(userInfo));\r\n    localStorage.setItem('users_info', JSON.stringify(parsedData));\r\n  }\r\n\r\n  setVisitorsCounter(): void {\r\n    localStorage.setItem('visitors_count', this.getVisitorsCounter() + 1 + '');\r\n  }\r\n\r\n  getVisitorsCounter(): number {\r\n    return +localStorage.getItem('visitors_count');\r\n  }\r\n}\r\n","import {MaterialModule} from '../material.module';\r\nimport {MAT_COLOR_FORMATS, NGX_MAT_COLOR_FORMATS, NgxMatColorPickerModule} from '@angular-material-components/color-picker';\r\nimport {LayoutModule} from '@angular/cdk/layout';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ChipsComponent} from './components/chips/chips.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {ColorFieldComponent} from './components/color-field/color-field.component';\r\nimport {NavigationComponent} from './components/navigation/navigation.component';\r\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport { GroupedVerticalBarChartComponent } from './components/charts/grouped-vertical-bar-chart/grouped-vertical-bar-chart.component';\r\nimport { ColorMapChartComponent } from './components/charts/color-map-chart/color-map-chart.component';\r\nimport { HorizontalBarChartComponent } from './components/charts/horizontal-bar-chart/horizontal-bar-chart.component';\r\nimport { PieChartComponent } from './components/charts/pie-chart/pie-chart.component';\r\nimport { NoDataForDisplayComponent } from './components/charts/no-data-for-display/no-data-for-display.component';\r\nimport {DateValidatorDirective} from './validators/date-validator.directive';\r\nimport {NoSpecialCharactersDirective} from './validators/no-special-characters.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ChipsComponent,\r\n    ColorFieldComponent,\r\n    NavigationComponent,\r\n    GroupedVerticalBarChartComponent,\r\n    ColorMapChartComponent,\r\n    HorizontalBarChartComponent,\r\n    PieChartComponent,\r\n    NoDataForDisplayComponent,\r\n    DateValidatorDirective,\r\n    NoSpecialCharactersDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    LayoutModule,\r\n    NgxMatColorPickerModule,\r\n    RouterModule,\r\n    NgxChartsModule\r\n  ],\r\n  exports: [\r\n    ChipsComponent,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    LayoutModule,\r\n    NgxMatColorPickerModule,\r\n    ColorFieldComponent,\r\n    NavigationComponent,\r\n    NgxChartsModule,\r\n    GroupedVerticalBarChartComponent,\r\n    ColorMapChartComponent,\r\n    HorizontalBarChartComponent,\r\n    PieChartComponent,\r\n    NoDataForDisplayComponent,\r\n    DateValidatorDirective,\r\n    NoSpecialCharactersDirective\r\n  ],\r\n  providers: [\r\n    { provide: MAT_COLOR_FORMATS, useValue: NGX_MAT_COLOR_FORMATS }\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import {Directive} from '@angular/core';\r\nimport {AbstractControl, NG_VALIDATORS, Validator} from '@angular/forms';\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Directive({\r\n  selector: '[appDateValidator]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: DateValidatorDirective,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class DateValidatorDirective implements Validator{\r\n\r\n  validate(control: AbstractControl): { [key: string]: any } | null {\r\n    if (control.value) {\r\n      return dayjs().isBefore(dayjs(control.value)) ? {dateInFuture : true} : null;\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import {Directive} from '@angular/core';\r\nimport {AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\r\nimport {Regexp} from '../constants/regexp.consts';\r\n\r\n@Directive({\r\n    selector: '[appNoSpecialCharacters]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: NoSpecialCharactersDirective,\r\n      multi: true,\r\n    },\r\n  ]\r\n})\r\n\r\nexport class NoSpecialCharactersDirective implements Validator {\r\n    private regexChars = Regexp.EXCEPT_SPECIAL_CHARACTERS;\r\n\r\n  validate(control: AbstractControl): { [key: string]: any } | null {\r\n    if (control.value) {\r\n      return !this.regexChars.test(control.value) ? {specialCharsForbidden : true} : null;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}