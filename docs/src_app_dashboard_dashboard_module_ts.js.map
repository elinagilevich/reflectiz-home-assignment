{"version":3,"file":"src_app_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/dashboard/analytics/analytics.component.ts","./src/app/dashboard/analytics/analytics.component.html","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard-store.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/visitors/visitors.component.ts","./src/app/dashboard/visitors/visitors.component.html","./src/app/shared/models/link.model.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {ageGroups, DashboardStoreService} from '../dashboard-store.service';\r\nimport {GenderDisplayNames, MotorTypeDisplayNames} from '../../shared/models/user-info.model';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {MatSelectChange} from '@angular/material/select';\r\n\r\n@Component({\r\n  selector: 'app-analytics',\r\n  templateUrl: './analytics.component.html',\r\n  styleUrls: ['./analytics.component.scss']\r\n})\r\nexport class AnalyticsComponent implements OnInit {\r\n\r\n  cardLayoutCols = 12;\r\n\r\n  // 1st chart\r\n  chartData1: { series: { name: any; value: unknown }[]; name: any }[];\r\n  xAxisLabel1 = 'Gender';\r\n  yAxisLabel1 = 'Quantity of choices';\r\n  legendTitle1 = 'Motor type';\r\n\r\n  // 2nd chart\r\n  chartData2: { name: string; value: number }[];\r\n  chosenAgeRange = '0-10';\r\n  ageRanges = ageGroups;\r\n  ageRangeSub = new BehaviorSubject('0-10');\r\n\r\n  // 3rd chart\r\n  chartData3: { series: { name: string; value: number }[]; name: number }[];\r\n  xAxisLabel3 = 'Quantity';\r\n  yAxisLabel3 = 'Place';\r\n  legendTitle3 = 'Hobbies';\r\n\r\n  // 4th chart\r\n  chartData4: { name: string; value: number }[];\r\n  legendTitle4 = 'Visitors';\r\n\r\n  constructor(private dashboardStoreService: DashboardStoreService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fillChart1Data();\r\n    this.fillChart2Data();\r\n    this.fillChart3Data();\r\n    this.fillChart4Data();\r\n  }\r\n\r\n  private fillChart3Data(): void {\r\n    const entries: Array<[string, number]> = Object.entries(this.dashboardStoreService.hobbiesMap);\r\n    this.chartData3 = entries.sort((e1, e2) => e2[1] - e1[1]).slice(0, 5)\r\n      .map((entry, index) => {\r\n        return {\r\n          name: index + 1,\r\n          series: [\r\n            {\r\n              name: entry[0],\r\n              value: entry[1]\r\n            }\r\n          ]\r\n        };\r\n      });\r\n  }\r\n\r\n  private fillChart2Data(): void {\r\n    this.ageRangeSub.subscribe(ageRange => {\r\n      this.chartData2 = Object.entries(this.dashboardStoreService.colorsByAgesGroupsMap[ageRange]).map(entry => {\r\n        return {\r\n          name: entry[0],\r\n          value: +entry[1]\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  private fillChart1Data(): void {\r\n    this.chartData1 = Object.entries(this.dashboardStoreService.engineByGenderMap).map(entry => {\r\n      return {\r\n        name: GenderDisplayNames[entry[0]],\r\n        series: Object.entries(entry[1]).map(innerEntry => {\r\n          return {\r\n            name: MotorTypeDisplayNames[innerEntry[0]],\r\n            value: innerEntry[1]\r\n          };\r\n        })\r\n      };\r\n    });\r\n  }\r\n\r\n  onAgeRangeChange($event: MatSelectChange): void {\r\n    this.ageRangeSub.next($event.value);\r\n  }\r\n\r\n  private fillChart4Data(): void {\r\n    this.chartData4 = Object.entries(this.dashboardStoreService.visitorsMap).map(entry => {\r\n      return {\r\n        name: entry[0],\r\n        value: +entry[1]\r\n      };\r\n    });\r\n  }\r\n}\r\n","<div class=\"analytic-container\">\r\n\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        Most picked engine type by gender\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"card-content\">\r\n      <div class=\"inner-content\">\r\n\r\n        <app-grouped-vertical-bar-chart [data]=\"chartData1\"\r\n                                        [legendTitle]=\"legendTitle1\" [xAxisLabel]=\"xAxisLabel1\"\r\n                                        [yAxisLabel]=\"yAxisLabel1\">\r\n        </app-grouped-vertical-bar-chart>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        Ratio of users who filled out the form\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"card-content\">\r\n      <div class=\"inner-content\">\r\n        <app-pie-chart [data]=\"chartData4\" [legendTitle]=\"legendTitle4\"></app-pie-chart>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        Most popular hobbies among visitors\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"card-content\">\r\n      <div class=\"inner-content\">\r\n\r\n        <app-horizontal-bar-chart [data]=\"chartData3\"\r\n                                  [legendTitle]=\"legendTitle3\" [xAxisLabel]=\"xAxisLabel3\"\r\n                                  [yAxisLabel]=\"yAxisLabel3\">\r\n        </app-horizontal-bar-chart>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        Most picked colors by age group\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"card-content\">\r\n      <div class=\"inner-content\">\r\n        <mat-form-field appearance=\"standard\" data-test-id=\"age-range\" class=\"select-range-control\">\r\n          <mat-label>Age range</mat-label>\r\n          <mat-select placeholder=\"Select age range\"\r\n                      [ngModel]=\"ageRangeSub | async\" (selectionChange)=\"onAgeRangeChange($event)\"\r\n                      name=\"ageRange\">\r\n            <mat-option *ngFor=\"let option of ageRanges\" value=\"{{option}}\">\r\n              {{option}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <app-color-map-chart [data]=\"chartData2\"></app-color-map-chart>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {DashboardComponent} from './dashboard.component';\r\nimport {VisitorsComponent} from './visitors/visitors.component';\r\nimport {AnalyticsComponent} from './analytics/analytics.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'visitors',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'visitors',\r\n        component: VisitorsComponent\r\n      },\r\n      {\r\n        path: 'analytics',\r\n        component: AnalyticsComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {DataInfoService} from '../shared/services/data-info.service';\r\nimport {Gender, UserInfo} from '../shared/models/user-info.model';\r\nimport * as dayjs from 'dayjs';\r\n\r\n\r\nexport const ageGroups = ['70-80', '60-70', '50-60', '40-50', '30-40', '20-30', '10-20', '0-10'];\r\nconst genderGroups = [Gender.Male, Gender.Female];\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardStoreService {\r\n\r\n  userInfo: UserInfo[] = [];\r\n  colorsByAgesGroupsMap = {};\r\n  hobbiesMap = {};\r\n  engineByGenderMap = {};\r\n  visitorsMap = {};\r\n  constructor(private dataInfoService: DataInfoService) { }\r\n\r\n  initService(): void {\r\n    if (!this.userInfo.length) {\r\n      this.userInfo = this.dataInfoService.getUserInfo();\r\n      this.fillColorsByAgesGroupsMap();\r\n      this.fillHobbiesMap();\r\n      this.fillEngineByGenderMap();\r\n      this.fillVisitorsMap();\r\n    }\r\n  }\r\n\r\n  private fillColorsByAgesGroupsMap(): void {\r\n    ageGroups.forEach(g => {\r\n      this.colorsByAgesGroupsMap[g] = {};\r\n      this.colorsByAgesGroupsMap['80+'] = {};\r\n    });\r\n    this.userInfo.forEach(user => {\r\n      const age = dayjs().diff(dayjs(user.birthDate), 'year');\r\n      const ageRange = this.getAgeRange(age) || '80+';\r\n      const initialColorVal = this.colorsByAgesGroupsMap[ageRange][user.favouriteColor] || 0;\r\n      this.colorsByAgesGroupsMap[ageRange][user.favouriteColor] = initialColorVal + 1;\r\n    });\r\n  }\r\n\r\n  private getAgeRange(age: number): string {\r\n    return ageGroups.find(g => {\r\n      const groupPoints = g.split('-');\r\n      return age >= +groupPoints[0] && age < +groupPoints[1];\r\n    });\r\n  }\r\n\r\n  private fillHobbiesMap(): void {\r\n    this.userInfo.forEach(user => {\r\n      user.hobbies.forEach(hobby => {\r\n        const initialHobbyVal = this.hobbiesMap[hobby] || 0;\r\n        this.hobbiesMap[hobby] = initialHobbyVal + 1;\r\n      });\r\n    });\r\n  }\r\n\r\n  private fillEngineByGenderMap(): void {\r\n    genderGroups.forEach(g => {\r\n      this.engineByGenderMap[g] = {};\r\n    });\r\n    this.userInfo.forEach(user => {\r\n      if (genderGroups.some(g => g === user.gender)) {\r\n        const initialVal = this.engineByGenderMap[user.gender][user.motorType] || 0;\r\n        this.engineByGenderMap[user.gender][user.motorType] = initialVal + 1;\r\n      }\r\n    });\r\n  }\r\n\r\n  private fillVisitorsMap(): void {\r\n    const filledInUsers = this.userInfo.length;\r\n    const allUsers = this.dataInfoService.getVisitorsCounter();\r\n    this.visitorsMap = {\r\n      filled: filledInUsers,\r\n      'not filled': allUsers - filledInUsers\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\r\nimport {Observable} from 'rxjs';\r\nimport {map, shareReplay} from 'rxjs/operators';\r\nimport {Link} from '../shared/models/link.model';\r\nimport {Router} from '@angular/router';\r\nimport {DashboardStoreService} from './dashboard-store.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  isMediumOrSmaller: Observable<boolean> = this.breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small, Breakpoints.Medium])\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n  links: Link[] = [\r\n    new Link('Visitors', 'visitors', 'people_outline'),\r\n    new Link('Analytics', 'analytics', 'insights')\r\n  ];\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver,\r\n              private router: Router,\r\n              private dashboardStoreService: DashboardStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dashboardStoreService.initService();\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"header mat-elevation-z5\" color=\"primary\">\r\n  <div class=\"left\">\r\n    <button\r\n      type=\"button\"\r\n      aria-label=\"Toggle sidenav\"\r\n      mat-icon-button\r\n      (click)=\"drawer.toggle()\"\r\n      *ngIf=\"isMediumOrSmaller | async\">\r\n      <mat-icon class=\"burger-icon\" aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n    </button>\r\n    <h2 class=\"title\">Reflectiz <span class=\"accent\">Cars</span></h2>\r\n  </div>\r\n  <div class=\"right\">\r\n  </div>\r\n\r\n</mat-toolbar>\r\n<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer [attr.role]=\"(isMediumOrSmaller | async) ? 'dialog' : 'navigation'\"\r\n               [mode]=\"(isMediumOrSmaller | async) ? 'over' : 'side'\"\r\n               [opened]=\"(isMediumOrSmaller | async) === false\" [disableClose]=\"(isMediumOrSmaller | async) === false\">\r\n\r\n\r\n    <app-navigation [items]=\"links\"></app-navigation>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {DashboardRoutingModule} from './dashboard-routing.module';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {DashboardComponent} from './dashboard.component';\r\nimport { VisitorsComponent } from './visitors/visitors.component';\r\nimport { AnalyticsComponent } from './analytics/analytics.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    VisitorsComponent,\r\n    AnalyticsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {DashboardGenderDisplayNames, MotorTypeDisplayNames, UserInfo} from '../../shared/models/user-info.model';\r\nimport * as dayjs from 'dayjs';\r\nimport {DashboardStoreService} from '../dashboard-store.service';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-visitors',\r\n  templateUrl: './visitors.component.html',\r\n  styleUrls: ['./visitors.component.scss']\r\n})\r\nexport class VisitorsComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  dataSource: MatTableDataSource<UserInfo>;\r\n  displayedColumns;\r\n  genderDisplayNames = DashboardGenderDisplayNames;\r\n  motorDisplayNames = MotorTypeDisplayNames;\r\n\r\n  constructor(private dashboardStoreService: DashboardStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new MatTableDataSource();\r\n    this.dataSource.data = this.dashboardStoreService.userInfo;\r\n    this.displayedColumns =\r\n      ['fullName', 'gender', 'email', 'birthDate', 'address', 'hobbies', 'favouriteColor', 'seatsAmount', 'motorType'];\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  getBirthDate(date: string): string {\r\n    const dayJsDate = dayjs(date);\r\n    return dayJsDate.format('DD MMMM YYYY');\r\n  }\r\n\r\n  getAge(birthDate: string): string {\r\n    const age = dayjs().diff(dayjs(birthDate), 'year');\r\n    const postfix = age > 1 ? 'years' : 'year';\r\n    return age + ' ' + postfix;\r\n  }\r\n}\r\n","<div class=\"table-container\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n    <ng-container matColumnDef=\"fullName\" sticky>\r\n      <th mat-header-cell *matHeaderCellDef>Full Name</th>\r\n      <td mat-cell *matCellDef=\"let userInfo\">\r\n        <span>{{userInfo.fullName}}</span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"gender\">\r\n      <th mat-header-cell *matHeaderCellDef>Gender</th>\r\n      <td mat-cell *matCellDef=\"let userInfo\">\r\n        <span>{{genderDisplayNames[userInfo.gender]}}</span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"email\">\r\n      <th mat-header-cell *matHeaderCellDef>Email</th>\r\n      <td mat-cell *matCellDef=\"let userInfo\">\r\n        <span>{{userInfo.email}}</span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"birthDate\">\r\n      <th mat-header-cell *matHeaderCellDef>Birth Date</th>\r\n      <td mat-cell *matCellDef=\"let userInfo\">\r\n        <span [matTooltip]=\"getAge(userInfo.birthDate)\">{{getBirthDate(userInfo.birthDate)}}</span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"address\">\r\n      <th mat-header-cell *matHeaderCellDef>Address</th>\r\n      <td mat-cell *matCellDef=\"let userInfo\">\r\n        <span>{{userInfo.location.country}}, {{userInfo.location.city}}, {{userInfo.location.address}}</span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"hobbies\">\r\n      <th mat-header-cell *matHeaderCellDef>Hobbies</th>\r\n      <td mat-cell *matCellDef=\"let userInfo\">\r\n                <span *ngFor=\"let hobby of userInfo.hobbies; let last = last\">\r\n                  {{hobby}}<span *ngIf=\"!last\">, </span>\r\n                </span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"favouriteColor\">\r\n      <th mat-header-cell *matHeaderCellDef>Color</th>\r\n      <td mat-cell *matCellDef=\"let userInfo\">\r\n        <div class=\"color-circle mat-elevation-z2\"\r\n             [ngStyle]=\"{'background-color' : userInfo.favouriteColor}\"\r\n             [matTooltip]=\"userInfo.favouriteColor\"\r\n             matTooltipPosition=\"below\"\r\n        ></div>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"seatsAmount\">\r\n      <th mat-header-cell *matHeaderCellDef>Seats</th>\r\n      <td mat-cell *matCellDef=\"let userInfo\">\r\n        <span>{{userInfo.seatsAmount}}</span>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"motorType\">\r\n      <th mat-header-cell *matHeaderCellDef>Motor</th>\r\n      <td mat-cell *matCellDef=\"let userInfo\">\r\n        <span>{{motorDisplayNames[userInfo.motorType]}}</span>\r\n      </td>\r\n    </ng-container>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[10, 25, 50]\">\r\n  </mat-paginator>\r\n</div>\r\n\r\n","\r\nexport class Link {\r\n  constructor(\r\n    public title: string,\r\n    public path: string,\r\n    public icon?: string\r\n  ) { }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}